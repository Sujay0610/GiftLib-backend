"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiService: function() { return /* binding */ apiService; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\n// API Base URL\nconst API_BASE_URL = \"https://giftlib-backend.onrender.com\";\n// Create axios instance\nconst api = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    timeout: 30000\n});\n// Request interceptor to add API key\napi.interceptors.request.use((config)=>{\n    const apiKey = localStorage.getItem(\"giftlib_api_key\");\n    if (apiKey && config.headers) {\n        config.headers[\"X-API-Key\"] = apiKey;\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Response interceptor for error handling\napi.interceptors.response.use((response)=>response, (error)=>{\n    var _error_response, _error_response1, _error_response2;\n    if (error.code === \"ECONNABORTED\") {\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"⏰ Request timed out. The server may be overloaded or unresponsive.\");\n    } else if (error.code === \"ERR_NETWORK\") {\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"\\uD83D\\uDD0C Connection failed. Please check if the backend server is running.\");\n    } else if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401) {\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"\\uD83D\\uDD10 Unauthorized. Please check your API key.\");\n    } else if (((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.status) === 403) {\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"\\uD83D\\uDEAB Forbidden. You don't have permission to access this resource.\");\n    } else if (((_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : _error_response2.status) >= 500) {\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"\\uD83D\\uDD25 Server error. Please try again later.\");\n    }\n    return Promise.reject(error);\n});\n// Helper function to handle API responses\nconst handleResponse = (response)=>{\n    return response.data;\n};\n// Helper function to handle API errors\nconst handleError = (error)=>{\n    var _error_response_data, _error_response, _error_response_data1, _error_response1;\n    if ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.detail) {\n        throw new Error(error.response.data.detail);\n    } else if ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : (_error_response_data1 = _error_response1.data) === null || _error_response_data1 === void 0 ? void 0 : _error_response_data1.message) {\n        throw new Error(error.response.data.message);\n    } else if (error.message) {\n        throw new Error(error.message);\n    } else {\n        throw new Error(\"An unexpected error occurred\");\n    }\n};\n// API functions\nconst apiService = {\n    // Health check\n    async healthCheck () {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"\".concat(API_BASE_URL, \"/\"));\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    // User management\n    async createUser (userData) {\n        try {\n            const formData = new FormData();\n            formData.append(\"email\", userData.email);\n            formData.append(\"full_name\", userData.full_name);\n            if (userData.company_name) {\n                formData.append(\"company_name\", userData.company_name);\n            }\n            const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"\".concat(API_BASE_URL, \"/api/users\"), formData);\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async getUserProfile () {\n        try {\n            const response = await api.get(\"/api/user/profile\");\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    // Gift operations\n    async initiateGift (giftData) {\n        try {\n            const response = await api.post(\"/api/initiate-gift\", giftData);\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async bulkInitiateGifts (bulkData) {\n        try {\n            const response = await api.post(\"/api/bulk-initiate-gifts\", bulkData);\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async getAllGifts () {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1000;\n        try {\n            const response = await api.get(\"/api/gifts\", {\n                params: {\n                    limit\n                }\n            });\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async getCampaignGifts (campaignId) {\n        try {\n            const response = await api.get(\"/api/campaign-gifts/\".concat(campaignId));\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async updateGiftStatus (statusData) {\n        try {\n            const response = await api.put(\"/api/gift-status\", statusData);\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async getGiftStatus (giftId) {\n        try {\n            const response = await api.get(\"/api/gift-status/\".concat(giftId));\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async verifyGift (giftId, verified) {\n        try {\n            const response = await api.post(\"/api/verify-gift\", {\n                giftId,\n                verified\n            });\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    // Excel operations\n    async downloadExcelTemplate () {\n        try {\n            const response = await api.get(\"/api/download-excel-template\", {\n                responseType: \"blob\"\n            });\n            return response.data;\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async uploadExcelFile (file, campaignId) {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append(\"campaign_id\", campaignId);\n            const response = await api.post(\"/api/upload-excel\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            });\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    // Email configuration\n    async getEmailConfig () {\n        try {\n            const response = await api.get(\"/api/email-config\");\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async updateEmailConfig (config) {\n        try {\n            const formData = new FormData();\n            formData.append(\"resend_api_key\", config.resend_api_key);\n            formData.append(\"from_email\", config.from_email);\n            if (config.sending_domain) {\n                formData.append(\"sending_domain\", config.sending_domain);\n            }\n            const response = await api.post(\"/api/email-config\", formData);\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    async testEmailConfig (testData) {\n        try {\n            const formData = new FormData();\n            Object.keys(testData).forEach((key)=>{\n                if (testData[key] !== null && testData[key] !== undefined) {\n                    formData.append(key, testData[key]);\n                }\n            });\n            const response = await api.post(\"/api/email-config/test\", formData);\n            return handleResponse(response);\n        } catch (error) {\n            handleError(error);\n        }\n    },\n    // Utility functions\n    setApiKey (apiKey) {\n        localStorage.setItem(\"giftlib_api_key\", apiKey);\n    },\n    getApiKey () {\n        return localStorage.getItem(\"giftlib_api_key\");\n    },\n    removeApiKey () {\n        localStorage.removeItem(\"giftlib_api_key\");\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});